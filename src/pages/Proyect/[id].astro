---
import { proyects } from "../../../public/Proyect.json";
import Layout from "../../layouts/Layout.astro";
import ReactIcon from "../../components/Icons/ReactIcon";
import GsapSvg from "../../components/Icons/GsapSvg";
import NetIcon from "../../components/Icons/NetIcon";
import Paypal from "../../components/Icons/Paypal";
import Api from "../../components/Icons/Api";
import C from "../../components/Icons/C";
import PhpIcon from "../../components/Icons/PhpIcon";
import Js from "../../components/Icons/Js";
import Mysql from "../../components/Icons/Mysql";
import Socket from "../../components/Icons/Socket";
import Mongo from "../../components/Icons/Mongo";
import Css from "../../components/Icons/Css";
import Next from "../../components/Icons/Next.jsx";
import Google from "../../components/Icons/Google";
import Three from "../../components/Icons/Three";
import Angular from "../../components/Icons/Angualar";
import { slide } from "astro:transitions";
import ButtonMain from "../../components/ButtonMain.astro";
import ShimmerButton from "../../components/shimmer-button";

// import { none } from "astro:transitions";

export function getStaticPaths() {
  return proyects.map((proyect) => ({
    params: { id: proyect.id.toString() },
  }));
}
const { id } = Astro.params;

const proyect = proyects.find(
  (proyect) => proyect.id === parseInt(id as string)
);

const FadeInAnimation = {
  old: {
    name: "", // same name as the keyframe in layouts/Main
    duration: "",
    easing: "",
    fillMode: "",
  },
  new: {
    name: "fadeIn",
    duration: "0.7s",
    easing: "linear",
    fillMode: "backwards",
  },
};

const fadeIn = {
  forwards: FadeInAnimation,
  backwards: FadeInAnimation,
};
---

<Layout title=`${proyect?.title}`>
  <div class="containerMain">
    <img src={proyect?.logo} loading="lazy" class="imgfondo" alt="" />
    <img src={proyect?.logo} loading="lazy" class="imgfondo2" alt="" />

    <section
      class="container flex justify-center items-center flex-col md:flex-row"
    >
      <div class="imgContainer containerProyect">
        <img
          class="img"
          transition:name=`image-${proyect?.logo}`
          transition:animate={fadeIn}
          src={proyect?.logo}
          alt=""
        />
      </div>
      <div class="containerTitle containerProyect">
        <h3 transition:name=`title-${proyect?.title}`>
          {proyect?.title}
        </h3>
      </div>
    </section>
    <section class="container flex justify-center items-center">
      <div class="containerInfo containerProyect">
        <h2
          transition:animate={slide({
            duration: "0.5s",
          })}
          class="font-extrabold uppercase text-4xl"
        >
          {proyect?.type}
        </h2>
      </div>
    </section>
    <section class="container flex justify-center items-center">
      <div class="containerBody containerProyect lg:flex-row flex-col">
        <div
          transition:animate={fadeIn}
          class="flex self-start flex-col w-full lg:w-1/2 p-4 lg:p-8  gap-8"
        >
          {
            proyect?.page1.linkedin ? (
              <iframe
                class="w-full rounded-md self-center"
                src={proyect?.page1.linkedin.link}
                height={proyect?.page1.linkedin.heigth}
                width={proyect?.page1.linkedin.width}
                frameborder="0"
                allowfullscreen=""
                title={proyect.page1.linkedin.title}
              />
            ) : (
              <>
                <p
                  transition:animate={slide({
                    duration: "0.3s",
                  })}
                  class="text-2xl font-extrabold"
                >
                  {proyect?.page1?.title}
                </p>
                <p
                  transition:animate={slide({
                    duration: "0.5s",
                  })}
                  class="text-xl text-pretty"
                >
                  {proyect?.page1?.body.part1}
                </p>
                <p
                  transition:animate={slide({
                    duration: "0.8s",
                  })}
                  class="text-xl text-pretty"
                >
                  {proyect?.page1?.body.part2}
                </p>
              </>
            )
          }
          <div class=" flex flex-col ">
            <div class="cantainerSvg z-10">

            {
              proyect?.teclogies?.map((Technology, index) => (
                <div class="iconContainer">
                  {Technology === "Next" && <Next client:visible />}
                  {Technology === "React" && <ReactIcon client:visible />}
                  {Technology === "Gsap" && <GsapSvg client:visible />}
                  {Technology === "Net" && <NetIcon client:visible />}
                  {Technology === "Paypal" && <Paypal client:visible />}
                  {Technology === "Api" && <Api client:visible />}
                  {Technology === "C" && <C client:visible />}
                  {Technology === "Php" && <PhpIcon client:visible />}
                  {Technology === "Js" && <Js client:visible />}
                  {Technology === "Mysql" && <Mysql client:visible />}
                  {Technology === "Socket" && <Socket client:visible />}
                  {Technology === "Mongo" && <Mongo client:visible />}
                  {Technology === "Css" && <Css client:visible />}
                  {Technology === "Google" && <Google client:visible />}
                  {Technology === "Three" && <Three client:visible />}
                  {Technology === "Angular" && <Angular client:visible />}

                </div>
              ))
            }
            </div>

              <div class="flex justify-center gap-2">
                <a
                  class="w-1/2 flex justify-center"
                  href={proyect?.github}
                  style={{ textDecoration: "none" }}
                  target="_blank"
                >
                  <ShimmerButton className="shadow-2xl py-0">
                    <span
                      className="  whitespace-pre-wrap text-center text-sm font-medium leading-none tracking-tight text-white dark:from-white dark:to-slate-900/10 lg:text-lg"
                    >
                  <ButtonMain>
                    <p> Github</p>
                    <svg
                      width="41"
                      height="36"
                      viewBox="0 0 41 36"
                      fill="none"
                    >
                      <path
                        d="M20.0516 3.58077C11.1929 3.58077 4.01038 9.99393 4.01038 17.9038C4.01038 24.6154 9.18636 30.2312 16.1643 31.7853C16.0895 31.5919 16.0413 31.3675 16.0413 31.0894V28.6414C15.3903 28.6414 14.2995 28.6414 14.0255 28.6414C12.928 28.6414 11.9521 28.22 11.4789 27.437C10.9536 26.5669 10.8627 25.2361 9.56066 24.422C9.17433 24.1511 9.46842 23.842 9.91356 23.8837C10.7357 24.0914 11.4174 24.5951 12.0591 25.3423C12.6981 26.0907 12.9988 26.2602 14.1926 26.2602C14.7714 26.2602 15.6376 26.2303 16.4531 26.1157C16.8915 25.1215 17.6495 24.206 18.5758 23.7739C13.2341 23.2834 10.6849 20.9105 10.6849 17.689C10.6849 16.302 11.3466 14.9605 12.4708 13.8301C12.1019 12.7081 11.638 10.42 12.6125 9.54872C15.016 9.54872 16.4691 10.9404 16.818 11.3164C18.0157 10.95 19.3311 10.7423 20.7133 10.7423C22.0982 10.7423 23.419 10.95 24.6194 11.3188C24.9643 10.9452 26.4187 9.54872 28.8276 9.54872C29.8061 10.4212 29.3369 12.7189 28.9639 13.8385C30.0814 14.9664 30.7391 16.3044 30.7391 17.689C30.7391 20.9081 28.1939 23.2798 22.8602 23.7727C24.328 24.4567 25.3987 26.3783 25.3987 27.8262V31.0894C25.3987 31.2136 25.368 31.3031 25.3519 31.4093C31.6027 29.453 36.0929 24.1535 36.0929 17.9038C36.0929 9.99393 28.9104 3.58077 20.0516 3.58077Z"
                        fill="white"></path>
                    </svg>
                  </ButtonMain>
                  </span>
                  </ShimmerButton>
                </a>
                <a
                class="w-1/2 flex justify-center"
                  href={proyect?.link}
                  style={{ textDecoration: "none" }}
                  target="_blank"

                >
                <ShimmerButton className="shadow-2xl py-0">
                  <span
                    className="  whitespace-pre-wrap text-center text-sm font-medium leading-none tracking-tight text-white dark:from-white dark:to-slate-900/10 lg:text-lg"
                  >
                
                  <ButtonMain>
                    <p>Visitar</p>
          
                    <svg
                    width="41"
                    height="40"
                    fill="#fff"  viewBox="0 0 100 100" enable-background="new 0 0 100 100" xml:space="preserve"><g id="SVGRepo_bgCarrier" stroke-width="0"></g><g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g><g id="SVGRepo_iconCarrier"> <path d="M30,58c-1.1,0-2-0.9-2-2v-2c0-1.1,0.9-2,2-2h20c0.5,0,0.9,0.2,1.3,0.5C54.5,49,59,46.6,64,46.1V26 c0-3.3-2.7-6-6-6H26c-3.3,0-6,2.7-6,6v34c0,3.3,2.7,6,6,6h20c0-2.8,0.6-5.5,1.7-8H30z M28,30c0-1.1,0.9-2,2-2h20c1.1,0,2,0.9,2,2v2 c0,1.1-0.9,2-2,2H30c-1.1,0-2-0.9-2-2V30z M28,42c0-1.1,0.9-2,2-2h24c1.1,0,2,0.9,2,2v2c0,1.1-0.9,2-2,2H30c-1.1,0-2-0.9-2-2V42z"></path> <path d="M66,52c-7.7,0-14,6.3-14,14s6.3,14,14,14s14-6.3,14-14S73.7,52,66,52z M73.9,62.5c0,0-8.9,9.7-8.9,9.7 c-0.4,0.4-0.8,0.6-1.4,0.6c-0.5,0-1-0.2-1.4-0.6l-4.8-4.7c-0.4-0.4-0.4-1,0-1.3l1.4-1.3c0.4-0.4,1-0.4,1.4,0l3.4,3.4l7.5-8.4 c0.4-0.4,1-0.4,1.4,0l1.4,1.3C74.2,61.5,74.2,62.2,73.9,62.5z"></path> </g></svg>
                  </ButtonMain>
                </span>
              </ShimmerButton>
                </a>
              
              </div>
          </div>
        </div>
        <div class="w-full lg:w-1/2">
          {
            proyect?.imageWindow ? (
              <img src={proyect?.imageWindow} alt="" />
            ) : (
              <img src={proyect?.imagePhone} alt="" />
            )
          }

          <img src={proyect?.page1?.image1} alt="" />
        </div>
      </div>
    
    </section>
  </div>

  <style>
    .body {
      background-color: red;
    }
    .img {
      object-fit: contain;
      width: 100%;
      height: 100%;
      filter: drop-shadow(0px 0px 1px #fff);
    }
    .imgfondo {
      position: fixed;
      width: 100%;
      height: 100%;
      background-color: #ffffff63;
      filter: blur(220px);
    }
    .imgfondo2 {
      top: 0;
      position: fixed;
      width: 100%;
      height: 100%;
      filter: blur(500px) saturate(5.5);
      transform: scale(1.5);
    }

    .imgHover {
      position: absolute;
      width: 100%;
      bottom: 0;
      left: 30%;
      z-index: 100;
    }
    .containerBody {
      display: flex;

      min-height: 850px;
      width: 100%;
    }
    .cantainerSvg {
      width: 100%;
      height: 60px;
      display: flex;
      left: 0;
      padding: 8px 0;
      align-items: center;
      justify-content: center;
      gap: 25px;
      z-index: 12231233;
      margin: 10px;
    }

    .cantainerSvg svg {
      width: 50px;
      height: 50px;
    }
    section {
      z-index: 1000;
      width: 100%;
      gap: 10px;
    }
    .containerProyect {
      color: #fff;
      font-size: 24px;
      border-radius: 10px;
      background: #2727277a;
      display: flex;
      justify-content: center;
      align-items: center;
      padding: 10px;
    }
    .containerInfo {
      display: flex;
      flex-direction: column;
      height: 150px;
      width: 100%;
    }
    .containerTitle {
      height: 200px;
      width: 100%;
    }
    .imgContainer {
      padding: 30px;

      width: 40%;
      height: 200px;
    }
    img {
      object-fit: contain;
      width: 100%;
      height: 100%;
    }
    .containerMain {
      padding: 100px 30px;
      gap: 10px;
      width: 100%;
      height: 100%;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      padding-bottom: 200px;
      align-items: center;
      justify-content: center;
      background: rgb(0, 224, 255);
      background: radial-gradient(
        circle,
        rgb(1, 31, 35) 42%,
        rgba(33, 33, 33, 1) 95%
      );
    }

    .containerMain h3 {
      width: 100%;
      height: 33%;
      display: flex;
      color: #fff;
      text-align: center;

      font-size: 54px;
      font-style: normal;
      font-weight: 800;
      /* line-height: 110px; */
      align-items: center;
      justify-content: center;
    }

    @media screen and (max-width: 1400px) {
      .containerGrid {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        gap: 30px;
      }
    }

    @media screen and (max-width: 960px) {
      .containerGrid {
        display: grid;
        grid-template-columns: repeat(1, 1fr);
        gap: 30px;
      }
    }
    @media screen and (max-width: 560px) {
      .containerGrid {
        contain: content;
        width: 100%;
      }
    }
    @media screen and (max-width: 768px) {

      .imgfondo2 {
        top: 0;
    position: fixed;
    width: 100vw;
    height: 100vh;
    filter: blur(30px) saturate(5.5);
    transform: scale(5.5);
    }
      .imgContainer {
        width: 100%;
      }
      .containerMain {
      padding: 100px 3px;
      gap: 10px;
      width: 100%;
      height: 100%;
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      padding-bottom: 200px;
      align-items: center;
      justify-content: center;
      background: rgb(0, 224, 255);
      background: radial-gradient(
        circle,
        rgb(1, 31, 35) 42%,
        rgba(33, 33, 33, 1) 95%
      );
    }
      h3 {
        font-size: 35px !important;
      }
      height: 2px; {
        font-size: 30px !important;
      }
    }
  </style>
</Layout>
